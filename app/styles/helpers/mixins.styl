// Clear the float on any element.
clearfix()
	&:after
		display table
		clear both
		content ''
// px to rem
set-font-size(value) {
	font-size: value; /* add PX (or original value) as backup */
	if (value is inherit) {
		/* do nothing, "inherit" has no unit */
	} else {
		font-size: remify(value);
	}
}
remify(value) { /* separate mixin, so it can be used elsewhere */
	u = unit(value);
	if (u is 'px') {
		return unit(value/16, 'rem');
	} else {
		return unit(value, u);
	}
}
// opacity
opacity(n)
	-ms-filter unquote('"progid:DXImageTransform.Microsoft.Alpha(Opacity='+n*100+')"') /* IE */
	filter unquote('alpha(opacity='+n*100+')')
	-moz-opacity n /* Firefox */
	-khtml-opacity n /* KHTML */
	opacity n /* Css 3*/
// Fix no working `-webkit-text-size-adjust: 100%;` in Android.
fix-text-size-adjust()
	background-image linear-gradient(transparent, transparent)

// Set element size
size($width, $height = $width)
	width $width
	height $height

// Set margin on left & right
margin-x($margin)
	margin-left $margin
	margin-right $margin

// Set margin on top & bottom
margin-y($margin)
	margin-top $margin
	margin-bottom $margin

// Set pading on left & right
padding-x($padding)
	padding-left $padding
	padding-right $padding

// Set padding on top & bottom
padding-y($padding)
	padding-top $padding
	padding-bottom $padding

// Set one static retina image
retinaBackground($image, $ext = 'png') {
	background-image url('../images/' + $image + '.' + $ext)

	@media (-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi) {
		background-image url('../images/' + $image + '@2x.' + $ext)
	}
}
spriteWidth($sprite) {
	width: $sprite[4];
}

spriteHeight($sprite) {
	height: $sprite[5];
}

spritePosition($sprite) {
	background-position: $sprite[2] $sprite[3];
}

spriteImage($sprite) {
	background-image: url($sprite[8]);
}

sprite($sprite) {
	spriteImage($sprite)
	spritePosition($sprite)
	spriteWidth($sprite)
	spriteHeight($sprite)
}
